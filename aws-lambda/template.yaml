AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'r/factchecker - AWS Lambda Hackathon Submission'

Parameters:
  Stage:
    Type: String
    Default: dev
    Description: Deployment stage

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: nodejs18.x
    Environment:
      Variables:
        STAGE: !Ref Stage

Resources:
  # API Gateway
  FactCheckerApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      Cors:
        AllowOrigin: "'*'"
        AllowHeaders: "'Content-Type,x-api-key'"
        AllowMethods: "'POST,OPTIONS'"
      Auth:
        ApiKeyRequired: true

  # API Key
  FactCheckerApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Name: !Sub "${AWS::StackName}-api-key"
      Description: API Key for r/factchecker
      Enabled: true

  # Usage Plan
  FactCheckerUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      UsagePlanName: !Sub "${AWS::StackName}-usage-plan"
      Description: Usage plan for r/factchecker API
      ApiStages:
        - ApiId: !Ref FactCheckerApi
          Stage: !Ref Stage
      Throttle:
        RateLimit: 100
        BurstLimit: 200
      Quota:
        Limit: 10000
        Period: MONTH

  # Link API Key to Usage Plan
  FactCheckerUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref FactCheckerApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref FactCheckerUsagePlan

  # Main Fact Checker Lambda Function
  FactCheckerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-fact-checker"
      CodeUri: ./
      Handler: factChecker.handler
      Description: Main fact-checking function for r/factchecker
      Events:
        FactCheckApi:
          Type: Api
          Properties:
            RestApiId: !Ref FactCheckerApi
            Path: /check
            Method: post
            Auth:
              ApiKeyRequired: true
        FactCheckOptions:
          Type: Api
          Properties:
            RestApiId: !Ref FactCheckerApi
            Path: /check
            Method: options
            Auth:
              ApiKeyRequired: false
      Environment:
        Variables:
          LOG_LEVEL: INFO

  # DynamoDB Table for Caching (Optional)
  FactCheckCache:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "${AWS::StackName}-cache"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: contentHash
          AttributeType: S
      KeySchema:
        - AttributeName: contentHash
          KeyType: HASH
      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

  # CloudWatch Log Group
  FactCheckerLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${AWS::StackName}-fact-checker"
      RetentionInDays: 14

  # IAM Role for Lambda
  FactCheckerRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${AWS::StackName}-lambda-role"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:Query
                Resource: !GetAtt FactCheckCache.Arn

Outputs:
  ApiGatewayUrl:
    Description: API Gateway endpoint URL
    Value: !Sub "https://${FactCheckerApi}.execute-api.${AWS::Region}.amazonaws.com/${Stage}"
    Export:
      Name: !Sub "${AWS::StackName}-api-url"

  ApiKey:
    Description: API Key for accessing the fact-checker API
    Value: !Ref FactCheckerApiKey
    Export:
      Name: !Sub "${AWS::StackName}-api-key"

  FunctionName:
    Description: Lambda function name
    Value: !Ref FactCheckerFunction
    Export:
      Name: !Sub "${AWS::StackName}-function-name"
